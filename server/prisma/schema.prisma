generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id                String             @id @default(uuid())
  student_number    String             @unique
  first_name        String
  middle_name       String?
  last_name         String
  age               Int
  birth_date        String
  gender            GENDER          
  religion          String
  contact_number    String
  address           Address            @relation(fields: [addressId], references: [id])
  refreshToken      String?            @db.Text()
  email             String             @unique
  password          String
  profile_image     Profile_Image?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  //! Only admin and professor can update this !!!
  school_year       String?
  school_college    String?
  school_course     String?
  school_section    String?
  role              ROLE               @default(STUDENT)
  type              TYPE               @default(REGULAR)
  subjects_enrolled SubjectsEnrolled[]
  addressId         String
}

enum GENDER {
  MALE
  FEMALE
  GAY
  LESBIAN
  UNKNOWN
}

enum TYPE {
  REGULAR
  IRREGULAR
}

enum ROLE {
  STUDENT
  ADMIN
  PROFESSOR
}

model Address {
  id          String    @id @default(uuid())
  Street_name String
  baranggay   String
  city        String
  region      String
  province String
  postal_code String
  Student     Student[]
}

model Profile_Image {
  id         String   @id @default(uuid())
  student_id String   @unique
  secure_url String
  image_url  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  student    Student  @relation(fields: [student_id], references: [id])
}

model Subject {
  id              String             @id @default(uuid())
  code            String             @unique
  subject_name    String
  units           Int
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @default(now())
  SubjectEnrolled SubjectsEnrolled[]
}

model SubjectsEnrolled {
  id        String   @id @default(uuid())
  studentID String
  subjectID String
  grade     Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  student   Student? @relation(fields: [studentID], references: [id])
  subjects  Subject? @relation(fields: [subjectID], references: [id])

  @@unique([studentID, subjectID])
}

model admin {
  id           String   @id @default(uuid())
  name         String
  password     String
  refreshToken String?  @db.Text()
  role         String   @default("ADMIN")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}
